% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_grouping.R
\name{groupRegionsByOverlap}
\alias{groupRegionsByOverlap}
\title{groupRegionsByOverlap}
\usage{
groupRegionsByOverlap(
  ct2,
  query,
  group_VAR = "overlap_id",
  use_priority = FALSE,
  ...
)
}
\arguments{
\item{ct2}{A ChIPtsne2 object.}

\item{query}{Either a single GRanges or named list of GRanges.}

\item{group_VAR}{Attribute name to add to rowData for storing new row/region grouping assignment. Will be overwritten if it exists.}

\item{...}{arguments passed to \code{\link[IRanges:findOverlaps-methods]{IRanges::findOverlaps()}}, i.e. maxgap, minoverlap, type, select, invert.}
}
\value{
Updated ChIPtsne2 object with group assignment added to rowData using specified group_VAR.
}
\description{
groupRegionsByOverlap
}
\examples{
ct2 = exampleChIPtsne2.with_meta()
peak_grs = seqsetvis::CTCF_in_10a_narrowPeak_grs
ct2.olap = ct2
ct2.olap = groupRegionsByOverlap(
  ct2.olap,
  peak_grs[1:2],
  group_VAR = "10A_AT1_combos"
)
ct2.olap = groupRegionsByOverlap(
  ct2.olap,
  peak_grs$MCF10A_CTCF,
  group_VAR = "10A_peaks"
)
ct2.olap = groupRegionsByOverlap(
  ct2.olap,
  peak_grs$MCF10AT1_CTCF,
  group_VAR = "AT1_peaks"
)
ct2.olap = groupRegionsByOverlap(
  ct2.olap,
  peak_grs[1:2],
  group_VAR = "10A_AT1_priority",
  use_priority = TRUE
)
rowData(ct2.olap)

# a GRangesList is allowed too
gr_ls = GenomicRanges::GRangesList(peak_grs)
ct2.olap = groupRegionsByOverlap(ct2.olap, gr_ls, group_VAR = "gr_ls_combos")
}
