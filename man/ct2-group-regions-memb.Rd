% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_grouping.R
\name{groupRegionsByMembershipTable}
\alias{groupRegionsByMembershipTable}
\alias{groupRegionsByMembershipTable,ChIPtsne2_no_rowRanges-method}
\title{groupRegionsByMembershipTable}
\usage{
groupRegionsByMembershipTable(ct2, membership, group_VAR = "membership_id")

\S4method{groupRegionsByMembershipTable}{ChIPtsne2_no_rowRanges}(ct2, membership, group_VAR = "membership_id")
}
\arguments{
\item{ct2}{A ChIPtsne2_no_rowRanges object.}

\item{membership}{Either a data.frame or GenomicRanges. See details.}

\item{group_VAR}{Attribute name to add to rowData for storing new row/region grouping assignment. Will be overwritten if it exists.}
}
\value{
Updated ChIPtsne2 object with group assignment added to rowData using specified group_VAR.
}
\description{
Adds a single grouping variable to rowData/region metadata based on a region overlap membership table.
}
\details{
This membership table can be one of 2 different main formats.
\enumerate{
\item a data.frame as returned from \link[seqsetvis:ssvMakeMembTable-methods]{seqsetvis::ssvMakeMembTable}, where rownames are the same as rownames in \code{ct2} and columns are all logical.
\item a GenomicRanges object as returned from \link[seqsetvis:ssvOverlapIntervalSets]{seqsetvis::ssvOverlapIntervalSets} or \link[seqsetvis:ssvConsensusIntervalSets]{seqsetvis::ssvConsensusIntervalSets}, where names are the same as rownames in \code{ct2} and mcols are all logical.
}
}
\examples{
ct2 = exampleChIPtsne2()
rowData(ct2)
np_grs = seqsetvis::CTCF_in_10a_narrowPeak_grs

# membership data.frame
memb_df = seqsetvis::ssvMakeMembTable(np_grs)
ct2.with_memb1 = chiptsne2:::.groupRegionsByMembershipTable(ct2, memb_df)
rowData(ct2.with_memb1)

# membership GRanges
memb_grs = seqsetvis::ssvOverlapIntervalSets(np_grs)
ct2.with_memb2 = chiptsne2:::.groupRegionsByMembershipTable(ct2, memb_grs)
rowData(ct2.with_memb2)

# rowData of example ct2 is actually a membership table
ct2.with_memb3 = chiptsne2:::.groupRegionsByMembershipTable(ct2, rowData(ct2))
rowData(ct2.with_memb3)
}
