% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_Config.R
\docType{class}
\name{Config-class}
\alias{Config-class}
\alias{Config.files}
\alias{color_mapping}
\alias{color_mapping,Config-method}
\alias{scale_color_config,Config-method}
\alias{scale_fill_config}
\alias{scale_fill_config,Config-method}
\alias{show,Config-method}
\alias{Config.save_config}
\title{Config}
\usage{
Config.files(
  file_paths,
  groups = NULL,
  group_names = NULL,
  group_colors = NULL
)

color_mapping(object)

\S4method{color_mapping}{Config}(object)

\S4method{scale_color_config}{Config}(object)

scale_fill_config(object)

\S4method{scale_fill_config}{Config}(object)

\S4method{show}{Config}(object)

Config.save_config(object, file)
}
\arguments{
\item{file_paths}{character paths to files}

\item{groups}{numeric vector of group assignments. 1 is first item in group_names, 2 is second, etc. Default is seq_along(file_path)}

\item{group_names}{vector of group names to assign from according to groups}

\item{group_colors}{vector of colors to use per group}

\item{object}{Config object to save to text file.}

\item{Config}{}
}
\value{
A Config object

a named vector of colors

a ggplot2 scale_fill_manual

invisibly returns path to saved config file.
}
\description{
Config

Config

color_mapping

color_mapping for Config

scale_color_config for Config

scale_fill_config

scale_fill_config for Config

Config.save_config
}
\section{Slots}{

\describe{
\item{\code{file_paths}}{character.}

\item{\code{groups}}{numeric.}

\item{\code{group_names}}{character.}

\item{\code{group_colors}}{character.}
}}

\examples{
Config.files(c("A", "B"))
color_mapping(Config(c("A", "B")))
my_df = data.frame(group = c("A", "B"))
my_df$x = 1:2
my_df$y = 1
library(ggplot2)
ggplot(my_df, aes(x = x, y = y, color = group)) +
  geom_point(size = 20) +
  expand_limits(x = c(0, 3)) +
  scale_color_config(Config(my_df$group))
my_df = data.frame(group = c("A", "B"))
my_df$x = 1:2
my_df$y = 1
library(ggplot2)
ggplot(my_df, aes(x = x, y = y, fill = group)) +
  geom_point(size = 20, pch = 22) +
  expand_limits(x = c(0, 3)) +
  scale_fill_config(Config(my_df$group))
cfg_file = system.file("extdata/ssvQC_peak_config.csv", package = "ssvQC")
qc_features = ConfigFeatures.parse(cfg_file)
f = tempfile()
Config.save_config(qc_features, f)
}
